{"ast":null,"code":"var _jsxFileName = \"D:\\\\KULIAH\\\\Semester6\\\\PBF\\\\praktikum\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../component/BlogPost/Post\";\nimport API from \"../../services\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Komponen state dari React untuk statefull component\n      listArtikel: [],\n      // Variabel array yang digunakan untuk menyimpan data API\n      insertArtikel: {\n        userId: 1,\n        id: 1,\n        title: \"\",\n        body: \"\"\n      }\n    };\n\n    this.ambilDataDariServerAPI = () => {\n      API.getNewsBlog().then(result => {\n        this.setState({\n          listArtikel: result\n        });\n      }); // fetch('http://localhost:3001/posts')    // Alamat URL API yang ingin kita ambil datannya\n      // .then(response => response.json())      // Ubah response data dari URL API menjadi sebuah data json\n      // .then(jsonHasilAmbilDariAPI => {        // Data json hasil ambil cari API kita masukkan ke dalam listArtikel pada state\n      //     this.setState({\n      //         listArtikel: jsonHasilAmbilDariAPI\n      //     })\n      // })\n    };\n\n    this.handleHapusArtikel = () => {\n      API.postNewsBlog(this.state.insertArtikel).then(response => {\n        this.ambilDataDariServerAPI();\n      }); // fetch(`http://localhost:3001/posts/${data}`, { method: 'DELETE' })\n      //     .then(res => {\n      //         this.ambilDataDariServerAPI(console.log(this.ambilDataDariServerAPI))\n      //     })\n    };\n\n    this.handleTambahArtikel = event => {\n      let formInsertArtikel = { ...this.state.insertArtikel\n      };\n      let timestamp = new Date().getTime();\n      formInsertArtikel['id'] = timestamp;\n      formInsertArtikel[event.target.name] = event.target.value;\n      this.setState({\n        insertArtikel: formInsertArtikel\n      });\n    };\n\n    this.handleTombolSimpan = () => {\n      API.postNewsBlog(this.state.insertArtikel).then(response => {\n        this.ambilDataDariServerAPI();\n      }); // fetch('http://localhost:3001/posts', {\n      //     method: 'post',\n      //     headers: {\n      //         'Accept': 'application/json',\n      //         'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify(this.state.insertArtikel)\n      // })\n      //     .then((Response) => {\n      //         this.ambilDataDariServerAPI();\n      //     })\n    };\n  }\n\n  componentDidMount() {\n    // Komponen untuk mengecek ketika component telah di mounting, maka panggil API\n    this.ambilDataDariServerAPI(); // Ambil data dari server API lokal\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"post-artikel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form pb-2 border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Judul\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      name: \"title\",\n      onChange: this.handleTambahArtikel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"body\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Isi\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"body\",\n      name: \"body\",\n      rows: \"3\",\n      onChange: this.handleTambahArtikel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleTombolSimpan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Simpan\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Daftar Artikel\"), this.state.listArtikel.map(artikel => {\n      // Looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\n      return React.createElement(Post, {\n        key: artikel.id,\n        judul: artikel.title,\n        isi: artikel.body,\n        idArtikel: artikel.id,\n        hapusArtikel: this.handleHapusArtikel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }); // Mappingkan data json dari API sesuai dengan kategorinya\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/KULIAH/Semester6/PBF/praktikum/src/container/BlogPost/BlogPost.jsx"],"names":["React","Component","Post","API","BlogPost","state","listArtikel","insertArtikel","userId","id","title","body","ambilDataDariServerAPI","getNewsBlog","then","result","setState","handleHapusArtikel","postNewsBlog","response","handleTambahArtikel","event","formInsertArtikel","timestamp","Date","getTime","target","name","value","handleTombolSimpan","componentDidMount","render","map","artikel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './BlogPost.css';\r\nimport Post from \"../../component/BlogPost/Post\";\r\nimport API from \"../../services\";\r\n\r\nclass BlogPost extends Component {\r\n    state = {               // Komponen state dari React untuk statefull component\r\n        listArtikel: [],     // Variabel array yang digunakan untuk menyimpan data API\r\n        insertArtikel: {\r\n            userId: 1,\r\n            id: 1,\r\n            title: \"\",\r\n            body: \"\"\r\n        }\r\n    }\r\n\r\n    ambilDataDariServerAPI = () => {\r\n        API.getNewsBlog().then(result => {\r\n            this.setState({\r\n                listArtikel: result\r\n            })\r\n        })\r\n        // fetch('http://localhost:3001/posts')    // Alamat URL API yang ingin kita ambil datannya\r\n        // .then(response => response.json())      // Ubah response data dari URL API menjadi sebuah data json\r\n        // .then(jsonHasilAmbilDariAPI => {        // Data json hasil ambil cari API kita masukkan ke dalam listArtikel pada state\r\n        //     this.setState({\r\n        //         listArtikel: jsonHasilAmbilDariAPI\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    componentDidMount() {                    // Komponen untuk mengecek ketika component telah di mounting, maka panggil API\r\n        this.ambilDataDariServerAPI()       // Ambil data dari server API lokal\r\n    }\r\n\r\n    handleHapusArtikel = () => {\r\n        API.postNewsBlog(this.state.insertArtikel)\r\n            .then((response) => {\r\n                this.ambilDataDariServerAPI();\r\n            });\r\n        // fetch(`http://localhost:3001/posts/${data}`, { method: 'DELETE' })\r\n        //     .then(res => {\r\n        //         this.ambilDataDariServerAPI(console.log(this.ambilDataDariServerAPI))\r\n        //     })\r\n    }\r\n\r\n    handleTambahArtikel = (event) => {\r\n        let formInsertArtikel = { ...this.state.insertArtikel };\r\n        let timestamp = new Date().getTime();\r\n        formInsertArtikel['id'] = timestamp;\r\n        formInsertArtikel[event.target.name] = event.target.value;\r\n        this.setState({\r\n            insertArtikel: formInsertArtikel\r\n        })\r\n    }\r\n\r\n    handleTombolSimpan = () => {\r\n        API.postNewsBlog(this.state.insertArtikel)\r\n            .then((response) => {\r\n                this.ambilDataDariServerAPI();\r\n            });\r\n        // fetch('http://localhost:3001/posts', {\r\n        //     method: 'post',\r\n        //     headers: {\r\n        //         'Accept': 'application/json',\r\n        //         'Content-Type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify(this.state.insertArtikel)\r\n        // })\r\n        //     .then((Response) => {\r\n        //         this.ambilDataDariServerAPI();\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-artikel\">\r\n                <div className=\"form pb-2 border-bottom\">\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Judul</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={this.handleTambahArtikel} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"body\" className=\"col-sm-2 col-form-label\">Isi</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <textarea className=\"form-control\" id=\"body\" name=\"body\" rows=\"3\" onChange={this.handleTambahArtikel}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\r\n                </div>\r\n                <h2>Daftar Artikel</h2>\r\n                {\r\n                    this.state.listArtikel.map(artikel => {     // Looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\r\n                        return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel} />   // Mappingkan data json dari API sesuai dengan kategorinya\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}